• Create your own SSH key. Once it is done:
◦ Add your public key to your repository, in a file name id_rsa_pub
◦ Update your ssh key on the intranet. This will allow you to push the repository
to our git server.


To create your own SSH key, you can follow these steps:

Open a terminal or command prompt on your local machine.

Generate a new SSH key pair by running the following command:

shell
Copy code
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
Replace "your_email@example.com" with your own email address associated with your Git repository.

You will be prompted to choose a location to save the SSH key. Press Enter to accept the default location, or provide a specific path if desired.

You will then be prompted to enter a passphrase for the SSH key. It is recommended to set a passphrase to enhance the security of your key. Enter a strong passphrase and remember it. Press Enter to continue.

The SSH key pair will be generated and saved in the specified location. The private key will be saved as id_rsa (or a custom name if provided), and the public key will be saved as id_rsa.pub.

Once the key pair is generated, you can add your public key (id_rsa.pub) to your repository by following these steps:

Copy the contents of your public key file (id_rsa.pub).
Go to your repository on the Git hosting platform (e.g., GitHub, GitLab).
Find the settings or options related to SSH keys.
Add a new SSH key and paste the contents of your public key into the designated field.
To update your SSH key on the intranet, you will need to follow the specific instructions or guidelines provided by your organization or IT department. Typically, this involves accessing the intranet portal or contacting the appropriate personnel to update your SSH key for accessing the Git server.

Once your SSH key is added to your repository and updated on the intranet, you should be able to push your repository to the Git server using SSH authentication.





